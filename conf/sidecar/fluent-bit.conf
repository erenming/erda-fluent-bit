[SERVICE]
    flush        0.5
    daemon       Off
    grace 1
    log_level    info
    parsers_file parsers.conf
    plugins_file plugins.conf
    http_server  On
    http_listen  0.0.0.0
    http_port    2020

[INPUT]
    name                 tail
    path                 /stdlog/*/*.log
    Exclude_Path         /stdlog/fluent-bit/*
    Tag                  eci-log
    DB                   /erda/flb_sidecar.db
    read_from_head       ${INPUT_TAIL_READ_FROM_HEAD}
    Buffer_Chunk_Size    1MB
    Buffer_Max_Size      10MB
    Skip_Long_Lines      On
    Skip_Empty_Lines     On
    Refresh_Interval     30
    Rotate_Wait          600

    # forced: can't change
    Path_Key             log_path

    Mem_Buf_Limit        50MB

    multiline.parser     cri

[FILTER]
    name                  multiline
    match                 eci-log
    multiline.key_content log
    multiline.parser      multiline-regex-generic

[FILTER]
    Name     throttle
    Match    *
    Rate     1000
    Window   300
    Interval 1s

[FILTER]
    Name            parser
    Match           eci-log
    Key_Name        log_path
    Preserve_Key    True
    Reserve_Data    True
    Parser          log-id

[FILTER]
    Name            lua
    Match           eci-log
    script          scripts/enrich-meta.lua
    call            add_cpuset

[FILTER]
    Name            parser
    Match           eci-log
    Key_Name        cpuset
    Preserve_Key    True
    Reserve_Data    True
    Parser          cpuset

[FILTER]
    Name            parser
    Match           eci-log
    Key_Name        log
    Preserve_Key    True
    Reserve_Data    True
    Parser          erda-info

[FILTER]
    Name            record_modifier
    Match           eci-log
    Record          __meta_erda_terminus_define_tag ${TERMINUS_DEFINE_TAG}
    Record          __meta_erda_terminus_key ${TERMINUS_KEY}
    Record          __meta_erda_dice_org_id ${DICE_ORG_ID}
    Record          __meta_erda_dice_org_name ${DICE_ORG_NAME}
    Record          __meta_erda_dice_project_id ${DICE_PROJECT_ID}
    Record          __meta_erda_dice_project_name ${DICE_PROJECT_NAME}
    Record          __meta_erda_dice_application_id ${DICE_APPLICATION_ID}
    Record          __meta_erda_dice_application_name ${DICE_APPLICATION_NAME}
    Record          __meta_erda_dice_runtime_id ${DICE_RUNTIME_ID}
    Record          __meta_erda_dice_runtime_name ${DICE_RUNTIME_NAME}
    Record          __meta_erda_dice_service_name ${DICE_SERVICE_NAME}
    Record          __meta_erda_dice_workspace ${DICE_WORKSPACE}
    Record          __meta_erda_dice_component ${DICE_COMPONENT}
    Record          __meta_erda_terminus_log_key ${TERMINUS_LOG_KEY}
    Record          __meta_erda_monitor_log_key ${MONITOR_LOG_KEY}
    Record          __meta_erda_dice_cluster_name ${DICE_CLUSTER_NAME}
    Record          __meta_erda_msp_env_id ${MSP_ENV_ID}
    Record          __meta_erda_msp_log_attach ${MSP_LOG_ATTACH}
    Record          __meta_erda_pod_ip ${POD_IP}
    Record          __meta_erda_monitor_log_collector ${MONITOR_LOG_COLLECTOR}

# [FILTER]
#     Name                kubernetes
#     Match               kube.*
#     Kube_URL            ${MASTER_VIP_URL}
#     Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
#     Kube_Tag_Prefix     kube.var.log.containers.
#     Merge_Log           On
#     Merge_Log_Key       log_processed
#     K8S-Logging.Parser  On
#     K8S-Logging.Exclude Off
#     Buffer_Size         2MB

# [OUTPUT]
#     name stdout
#     match x
#     format json

[OUTPUT]
    name                      erda
    match                     eci-log
    Retry_Limit               False

    remote_type               central_collector
    erda_ingest_url           ${OUTPUT_ERDA_INGEST_URL}

    docker_container_metadata_enable False
    # gzip enable when compress level > 0
    compress_level            3
    # HTTP request timeout
    request_timeout           20s
    keepalive_idle_timeout    30s
    # if basic_auth_username or basic_auth_password, then we use basic auth
    basic_auth_username ${COLLECTOR_AUTH_USERNAME}
    basic_auth_password ${COLLECTOR_AUTH_PASSWORD}

    # batch flush config
    batch_event_limit                ${OUTPUT_BATCH_EVENT_LIMIT}
    batch_event_content_limit_bytes  ${OUTPUT_BATCH_TRIGGER_CONTENT_LIMIT_BYTES}
    net_limit_bytes_per_second       ${OUTPUT_NET_LIMIT_BYTES_PER_SECOND}

# send to log_analysis
[OUTPUT]
    name                      erda
    match                     eci-log
    Retry_Limit               False

    # if remote_type is log_analysis, then
    # if erda_ingest_url is not empty, we will send all log to log_analysis
    # if erda_ingest_url is empty, we will send log of the container which have env MONITOR_LOG_COLLECTOR set
    remote_type               log_analysis
    erda_ingest_url           ${OUTPUT_ERDA_INGEST_URL}

    docker_container_metadata_enable False
    # gzip enable when compress level > 0
    compress_level            3
    # HTTP request timeout
    request_timeout           20s
    keepalive_idle_timeout    30s
    # if basic_auth_username or basic_auth_password, then we use basic auth
    basic_auth_username ${COLLECTOR_AUTH_USERNAME}
    basic_auth_password ${COLLECTOR_AUTH_PASSWORD}
