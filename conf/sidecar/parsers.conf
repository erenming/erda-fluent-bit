[PARSER]
    Name         erda-info
    Format       regex
    Regex        /(?<__meta_erda_level>[Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|DEBU|[Ii]nfo|INFO|[Ww]arn(?:ing)?|WARN(?:ING)?|[Ee]rr(?:or)?|ERR(?:OR)){1}(.*?)\[([\w|\-|\_]*?)\,(?<__meta_erda_trace_id>{?\w{8}-?\w{4}-?\w{4}-?\w{4}-?\w{12}}?)?([\,|\w|\-|\_|=]*?)\]/

# in ECI, the <__id> is container name
# eg. /stdlog/nginx/0.log
[PARSER]
    Name        log-id
    Format      regex
    Regex       /\/(?<__id>\w+)\/[\w|\-]+.log/

# eg. /kubepods/besteffort/pod850b055a-489f-47c0-b6cc-4c0b91533937/c6d02f5eca25c7239ade38d8b8bada5763790eb4f106c4a9023607a28b8441cb
[PARSER]
    Name        cpuset
    Format      regex
    Regex       /\/kubepods\/[\w|\-\_]*\/([\w|\-|_]*)\/(?<id>\w+)/

[MULTILINE_PARSER]
    name          multiline-regex-generic
    type          regex
    flush_timeout 500
    #
    # Regex rules for multiline parsing
    # ---------------------------------
    #
    # configuration hints:
    #
    #  - first state always has the name: start_state
    #  - every field in the rule must be inside double quotes
    #
    # rules |   state name  | regex pattern                  | next state
    # ------|---------------|--------------------------------------------
    rule      "start_state"   "/(?<timestamp>\d{4}[\/-]\d{2}[\/-]\d{2}(\s|T)\d{2}:\d{2}:\d{2}\D?\d*)(.*?)(?<level>[Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|DEBU|[Ii]nfo|INFO|[Ww]arn(?:ing)?|WARN(?:ING)?|[Ee]rr(?:or)?|ERR(?:OR)){1}/"  "cont"
    rule      "cont"          "/^((?!(\d{4}[\/-]\d{2}[\/-]\d{2}(\s|T)\d{2}:\d{2}:\d{2}\D?\d*)).)*$/"                     "cont"
