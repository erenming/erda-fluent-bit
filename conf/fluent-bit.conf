[SERVICE]
    flush        0.5
    daemon       Off
    grace 1
    log_level    info
    parsers_file parsers.conf
    plugins_file plugins.conf
    http_server  On
    http_listen  0.0.0.0
    http_port    2020

[INPUT]
    name                 tail
    #path                 /var/log/containers/*.log
    path                 ${DOCKER_CONTAINER_ROOT_PATH}/*/*.log
    DB                   /data/spot/fluent-bit/flb_docker.db
    Tag                  kube.*
    #read_from_head       ${INPUT_TAIL_READ_FROM_HEAD}
    read_from_head       true
    Buffer_Chunk_Size    1MB
    Buffer_Max_Size      10MB
    Skip_Long_Lines      On
    Refresh_Interval     30
    Rotate_Wait          600
    #Ignore_Older         10m

    # forced: can't change
    Path_Key             log_path

    Mem_Buf_Limit        100MB

    Parser docker
    Docker_Mode On
    Docker_Mode_Flush 0.5
    Docker_Mode_Parser multiline_first


# [FILTER]
#     Name                kubernetes
#     Match               kube.*
#     Kube_URL            ${MASTER_VIP_URL}
#     Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
#     Kube_Tag_Prefix     kube.var.log.containers.
#     Merge_Log           On
#     Merge_Log_Key       log_processed
#     K8S-Logging.Parser  On
#     K8S-Logging.Exclude Off
#     Buffer_Size         2MB

[OUTPUT]
    name stdout
    match x
    format json

[OUTPUT]
    name                      erda
    match                     *
    Retry_Limit               False

    # if remote_type is log_analysis, then
    # if erda_ingest_url is not empty, we will send all log to log_analysis
    # if erda_ingest_url is empty, we will send log of the container which have env MONITOR_LOG_COLLECTOR set
    remote_type               ${OUTPUT_ERDA_REMOTE_TYPE}
    erda_ingest_url           ${OUTPUT_ERDA_INGEST_URL}
    # extract included environment from container, and then add into tags
    # container is a job when it has environment TERMINUS_DEFINE_TAG
    container_env_include     TERMINUS_DEFINE_TAG,TERMINUS_KEY,MESOS_TASK_ID,DICE_ORG_ID,DICE_ORG_NAME,DICE_PROJECT_ID,DICE_PROJECT_NAME,DICE_APPLICATION_ID,DICE_APPLICATION_NAME,DICE_RUNTIME_ID,DICE_RUNTIME_NAME,DICE_SERVICE_NAME,DICE_WORKSPACE,DICE_COMPONENT,TERMINUS_LOG_KEY,MONITOR_LOG_KEY,DICE_CLUSTER_NAME,MSP_ENV_ID,MSP_LOG_ATTACH,POD_IP,MONITOR_LOG_COLLECTOR

    docker_container_root_path  ${DOCKER_CONTAINER_ROOT_PATH}
    # gzip enable when compress level > 0
    compress_level            3
    # HTTP request timeout
    request_timeout           20s
    keepalive_idle_timeout    30s
    # if basic_auth_username or basic_auth_password, then we use basic auth
    basic_auth_username ${COLLECTOR_AUTH_USERNAME}
    basic_auth_password ${COLLECTOR_AUTH_PASSWORD}

    # batch flush config
    batch_event_limit                ${OUTPUT_BATCH_EVENT_LIMIT}
    batch_event_content_limit_bytes  ${OUTPUT_BATCH_TRIGGER_CONTENT_LIMIT_BYTES}
    net_limit_bytes_per_second       ${OUTPUT_NET_LIMIT_BYTES_PER_SECOND}

