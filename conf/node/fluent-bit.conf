[SERVICE]
    flush        1
    daemon       Off
    grace 1
    log_level    info
    parsers_file parsers.conf
    plugins_file plugins.conf
    http_server  Off
    http_listen  0.0.0.0
    http_port    2020

[INPUT]
    name                 tail
    #path                 /var/log/containers/*.log
    path                 ${DOCKER_CONTAINER_ROOT_PATH}/*/*.log
    DB                   /data/spot/fluent-bit/flb_docker.db
    Tag                  docker-log
    read_from_head       ${INPUT_TAIL_READ_FROM_HEAD}
    Buffer_Chunk_Size    1MB
    Buffer_Max_Size      10MB
    Skip_Long_Lines      On
    Refresh_Interval     120
    Rotate_Wait          120
    Ignore_Older         10m
    DB.locking           true
    DB.journal_mode      WAL

    # forced: can't change
    Path_Key             log_path

    Mem_Buf_Limit        300MB

    Parser docker
    Docker_Mode On
    Docker_Mode_Flush 1
    Docker_Mode_Parser multiline-first

[FILTER]
    Name            parser
    Match           docker-log
    Key_Name        log_path
    Preserve_Key    True
    Reserve_Data    True
    Parser          log-id

[FILTER]
    Name            parser
    Match           docker-log
    Key_Name        log
    Preserve_Key    True
    Reserve_Data    True
    Parser          erda-info

# [OUTPUT]
#     name stdout
#     match x
#     format json

[OUTPUT]
    name                      erda
    match                     docker-log
    Retry_Limit               False

    # if remote_type is log_analysis, then
    # if erda_ingest_url is not empty, we will send all log to log_analysis
    # if erda_ingest_url is empty, we will send log of the container which have env MONITOR_LOG_COLLECTOR set
    remote_type               central_collector
    erda_ingest_url           ${OUTPUT_ERDA_INGEST_URL}
    # extract included environment from container, and then add into tags
    # container is a job when it has environment TERMINUS_DEFINE_TAG
    container_env_include     TERMINUS_DEFINE_TAG,TERMINUS_KEY,MESOS_TASK_ID,DICE_ORG_ID,DICE_ORG_NAME,DICE_PROJECT_ID,DICE_PROJECT_NAME,DICE_APPLICATION_ID,DICE_APPLICATION_NAME,DICE_RUNTIME_ID,DICE_RUNTIME_NAME,DICE_SERVICE_NAME,DICE_WORKSPACE,DICE_COMPONENT,TERMINUS_LOG_KEY,MONITOR_LOG_KEY,DICE_CLUSTER_NAME,MSP_ENV_ID,MSP_LOG_ATTACH,POD_IP,MONITOR_LOG_COLLECTOR

    docker_container_root_path  ${DOCKER_CONTAINER_ROOT_PATH}
    docker_container_metadata_enable True
    # gzip enable when compress level > 0
    compress_level            3
    # HTTP request timeout
    request_timeout           20s
    keepalive_idle_timeout    30s
    # if basic_auth_username or basic_auth_password, then we use basic auth
    basic_auth_username ${COLLECTOR_AUTH_USERNAME}
    basic_auth_password ${COLLECTOR_AUTH_PASSWORD}

# send to log_analysis
[OUTPUT]
    name                      erda
    match                     docker-log
    Retry_Limit               False

    # if remote_type is log_analysis, then
    # if erda_ingest_url is not empty, we will send all log to log_analysis
    # if erda_ingest_url is empty, we will send log of the container which have env MONITOR_LOG_COLLECTOR set
    remote_type               log_analysis
    erda_ingest_url           ${OUTPUT_ERDA_INGEST_URL}
    # extract included environment from container, and then add into tags
    # container is a job when it has environment TERMINUS_DEFINE_TAG
    container_env_include     TERMINUS_DEFINE_TAG,TERMINUS_KEY,MESOS_TASK_ID,DICE_ORG_ID,DICE_ORG_NAME,DICE_PROJECT_ID,DICE_PROJECT_NAME,DICE_APPLICATION_ID,DICE_APPLICATION_NAME,DICE_RUNTIME_ID,DICE_RUNTIME_NAME,DICE_SERVICE_NAME,DICE_WORKSPACE,DICE_COMPONENT,TERMINUS_LOG_KEY,MONITOR_LOG_KEY,DICE_CLUSTER_NAME,MSP_ENV_ID,MSP_LOG_ATTACH,POD_IP,MONITOR_LOG_COLLECTOR

    docker_container_root_path  ${DOCKER_CONTAINER_ROOT_PATH}
    docker_container_metadata_enable True
    # gzip enable when compress level > 0
    compress_level            3
    # HTTP request timeout
    request_timeout           20s
    keepalive_idle_timeout    30s
    # if basic_auth_username or basic_auth_password, then we use basic auth
    basic_auth_username ${COLLECTOR_AUTH_USERNAME}
    basic_auth_password ${COLLECTOR_AUTH_PASSWORD}

